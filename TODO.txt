- Even if -t (tracing-only) now seems to basically work for Word, it
  doesn't for Excel. No IProvideClassInfo provided by its interfaces.
  So we need to avoid the need for IProvideClassInfo, and instead
  generate the necessary data at genproxy time: Mapping between method
  names and member ids for the "source" (outgoing) interfaces.

- Clean up the std::cout vs. std::wcout (and std::cerr vs. std::wcerr)
  inconsistency. Decision: Just use the the plain char streams for
  logging and warnings. Add static UTF16-to-UTF8 (and reverse, if
  necessary) converters to CProxiedUnknown.

- When that done, can get rid of the utils.hpp vs utilstemp.hpp and
  just use an utils.hpp.

- What about wmain() vs main()? Just use main(). Our command-line
  parameter are either by their natur ASCII-only or file names, and
  when command-line parameters are passed to main() they have been
  converted by the C++ runtime to system codepage, and that is what
  file names should be passed as to file opening functions anyway.
  (All our logging, tracing etc is in UTF-8, though.)

- Expand the -t output to be even more useful. Make sure callbacks
  (events) are also handled.

- Change terminology in code and comments: "Original application" =
  for example Word or Excel. "Replacement application" = for example
  Collabora Office. "Proxied application" is too unclear, we use the
  "proxy" term too much already.

- Add a -v switch to turn on the verbose logging, and put everything
  except the actual tracing of what the client does with the API the
  original application provides behind that switch. (Thus, without any
  switches at all, coleat would be entirely silent, except for error
  messages.)
